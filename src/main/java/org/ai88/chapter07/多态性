面向对象特征之三：多态性

1. 如何理解多态性？

理解：理解为一个事物的多种形态。

2. Java中多态性的体现:
   子类对象的多态性：父类的引用指向子类的对象。（或子类的对象赋给父类的引用）
   比如:Person p2 = new Man();

3. 多态性的应用：
多态性的应用：虚拟方法调用

在多态的场景下，调用方法时。
    编译时，认为方法是左边声明的父类的类型的方法（即被重写的方法）
    执行式，实际执行的是子类重写父类的方法。
简称为：编译看左边，运行看右边。

4. 多态性的使用前提：① 要有类的继承关系 ② 要有方法的重写

5. 多态的适用性：适用于方法，不适用于属性。

6. 多态的好处与弊端
6.1 弊端：
在多态的场景下，我们创建了子类的对象，也加载了子类特有的属性和方法。但是由于声明为父类的引用，
导致我们没有办法直接调用子类特有的属性和方法。


6.2 好处：
极大的减少了代码的冗余，不需要定义多个重载的方法。

